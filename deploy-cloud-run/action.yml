name: Deploy to Cloud Run
description: Deploy to Cloud Run
inputs:
  automatic_rollback_enabled:
    description: "Whether to enable auto rollback"
    default: "true"
  blue_green_enabled:
    description: "Whether to enable blue-green deployment"
    default: "false"
  image:
    description: "The image to deploy"
    required: true
  image_internal:
    description: "The image stored in GAR"
  job:
    description: "The job to deploy"
  region:
    description: "The region to deploy the Cloud Run service to"
    required: true
  service:
    description: "The service to deploy"
  service_account:
    description: "The service account to use for authentication"
    required: true
  test_url:
    description: "The full URL to use for testing the service externally. Include the protocol and full path. e.g. https://example.com/health or http://example.com"
    default: ""
  to_latest:
    description: "Whether to deploy to the latest revision"
    default: "true"
  workload_identity_provider:
    description: "The workload identity provider to use for authentication"
    required: true
runs:
  using: composite
  steps:
    - uses: actions/checkout@v4
    - uses: google-github-actions/auth@v2
      with:
        service_account: ${{ inputs.service_account }}
        workload_identity_provider: ${{ inputs.workload_identity_provider }}
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
    - name: Setup status codes for catching errors
      id: http_responses
      shell: bash
      run: |
        echo "Need to set this otherwise the action will fail and status will be empty even continue-on-error is set to true"
        echo "codes='300,301,302,303,304,305,306,307,308,400,401,402,403,404,405,406,408,409,410,411,412,413,414,415,416,417,418,421,422,425,426,428,429,431,451,500,501,502,503,504,505,506,507,510,511'" >> "${GITHUB_OUTPUT}"
    - name: Logging - setup cloud SDK
      run: echo "Setting up Cloud SDK..."
      shell: bash
    - name: Configure docker
      shell: bash
      run: gcloud auth configure-docker ${{ inputs.region }}-docker.pkg.dev --quiet
    - name: docker push
      shell: bash
      if: ${{ inputs.image_internal }}
      run: |
        docker pull $IMAGE
        docker tag $IMAGE $IMAGE_INTERNAL
        docker push $IMAGE_INTERNAL
      env:
        IMAGE: ${{ inputs.image }}
        IMAGE_INTERNAL: ${{ inputs.image_internal }}
    - name: Parse test_url and retrieve the path
      id: parse_url
      if: ${{ inputs.test_url != '' }}
      run: |
        extract_path() {
            local url="$1"
            # Remove scheme (http:// or https://) and domain, keep only the path
            local path=$(echo "$url" | sed -E 's|https?://[^/]+||')
            # If path is empty, set to "/"
            if [[ -z "$path" ]]; then
                path="/"
            fi
            echo "url_path=$path" >> "${GITHUB_OUTPUT}"
        }
        extract_path "${{ inputs.test_url }}"
      shell: bash
    - name: Get current Cloud Run service revision
      id: get_revision
      if: ${{ inputs.automatic_rollback_enabled == 'true' || inputs.blue_green_enabled == 'true' }}
      shell: bash
      run: |
        echo "Getting current cloudrun revision..."
        REV=$( \
          gcloud run services describe "${{ inputs.service }}" \
            --region "${{ inputs.region }}" \
            --format="value(status.latestReadyRevisionName)" \
        )
        echo "Current revision: $REV"
        echo "revision=$REV" >> "$GITHUB_OUTPUT"
    - name: Logging - Deploy to Cloud Run
      run: echo "Deploying to Cloud Run..."
      if: ${{ inputs.blue_green_enabled == 'false' }}
      shell: bash
    - name: Deploy to Cloud Run
      uses: google-github-actions/deploy-cloudrun@v2
      if: ${{ inputs.blue_green_enabled == 'false' }}
      id: deploy
      with:
        service: ${{ inputs.service }}
        job: ${{ inputs.job }}
        image: ${{ inputs.image_internal || inputs.image }}
        region: ${{ inputs.region }}
        revision_traffic: ${{ inputs.to_latest == 'true' && 'LATEST=100' || '' }}
        skip_default_labels: true
    - name: Run HTTP health check
      continue-on-error: true
      uses: fjogeleit/http-request-action@v1
      if: ${{ inputs.blue_green_enabled == 'false' && inputs.test_url != '' }}
      id: test_live
      with:
        url: ${{ inputs.test_url }}
        method: 'GET'
        ignoreSsl: true
        ignoreStatusCodes: ${{ steps.http_responses.outputs.codes }}
    - name: Logging - Deploy to Cloud Run Blue
      run: echo "Deploying ${{ inputs.image_internal || inputs.image }} to ${{ inputs.service }} blue..."
      if: ${{ inputs.blue_green_enabled == 'true' }}
      shell: bash
    - name: Deploy to Cloud Run Blue
      uses: google-github-actions/deploy-cloudrun@v2
      id: deploy_blue
      if: ${{ inputs.blue_green_enabled == 'true' }}
      with:
        service: ${{ inputs.service }}
        job: ${{ inputs.job }}
        image: ${{ inputs.image_internal || inputs.image }}
        region: ${{ inputs.region }}
        tag: blue-release
        no_traffic: true
        skip_default_labels: true
    - name: Run HTTP health check on blue
      uses: fjogeleit/http-request-action@v1
      if: ${{ inputs.blue_green_enabled == 'true' && inputs.test_url != ''}}
      id: test_blue
      with:
        url: ${{ steps.deploy_blue.outputs.url }}${{ steps.parse_url.outputs.url_path }}
        method: 'GET'
        ignoreSsl: true
        ignoreStatusCodes: ${{ steps.http_responses.outputs.codes }}
    - name: Logging - Check HTTP Status from test_blue
      run: |
        echo "HTTP Status from test_blue: ${{ steps.test_blue.outputs.status }}"
      if: ${{ inputs.blue_green_enabled == 'true' }}
      shell: bash
    - name: Logging - Deploy to Cloud Run Green
      run: echo "Deploying ${{ inputs.image_internal || inputs.image }} to ${{ inputs.service }} green..."
      if: ${{ inputs.blue_green_enabled == 'true' && steps.test_blue.outputs.status >= 200 && steps.test_blue.outputs.status < 300 }}
      shell: bash
    - name: Deploy to Cloud Run Green
      uses: google-github-actions/deploy-cloudrun@v2
      id: deploy_green
      if: ${{ inputs.blue_green_enabled == 'true' && steps.test_blue.outputs.status >= 200 && steps.test_blue.outputs.status < 300 }}
      with:
        service: ${{ inputs.service }}
        job: ${{ inputs.job }}
        image: ${{ inputs.image_internal || inputs.image }}
        region: ${{ inputs.region }}
        revision_traffic: 'LATEST=100'
        skip_default_labels: 'true'
        update_traffic_flags: '--remove-tags blue-release'
    - name: Run HTTP health check on green
      continue-on-error: true
      uses: fjogeleit/http-request-action@v1
      if: ${{ inputs.blue_green_enabled == 'true' && inputs.test_url != '' && steps.test_blue.outputs.status >= 200 && steps.test_blue.outputs.status < 300 }}
      id: test_green
      with:
        url: ${{ inputs.test_url }}
        method: 'GET'
        ignoreSsl: true
        ignoreStatusCodes: ${{ steps.http_responses.outputs.codes }}
    - name: Logging - Check HTTP Status from test_green
      run: |
        echo "HTTP Status from test_green: ${{ steps.test_green.outputs.status }}"
      if: ${{ inputs.blue_green_enabled == 'true' && steps.test_green.outputs.status > 0 }}
      shell: bash
    - name: Logging - Rollback to previous version
      if: ${{ inputs.automatic_rollback_enabled == 'true' && (steps.test_green.outputs.status >= 300 || steps.test_live.outputs.status >= 300) }}
      run: |
        echo "Rolling back to: ${{ steps.get_revision.outputs.revision }}"
      shell: bash
    - name: Rollback to previous version if health check fails
      uses: google-github-actions/deploy-cloudrun@v2
      id: rollback
      if: ${{ inputs.automatic_rollback_enabled == 'true' && inputs.test_url != '' && (steps.test_green.outputs.status >= 300 || steps.test_live.outputs.status >= 300) }}
      with:
        service: ${{ inputs.service }}
        job: ${{ inputs.job }}
        image: ${{ inputs.image_internal || inputs.image }}
        region: ${{ inputs.region }}
        revision_traffic: '${{ steps.get_revision.outputs.revision }}=100'
        skip_default_labels: true
